[tool.poetry]
name = "nicepipe"
version = "0.3.1"
description = "remote worker for video inference"
license = "Proprietary"
authors = ["John-Henry Lim <42513874+Interpause@users.noreply.github.com>"]
readme = "README.md"

[tool.poe.tasks]
# Below PyTorch wheels are bundled with CUDA and cuDNN. Importing pytorch first will allow Tensorflow to detect CUDA.
# PyTorch is installed separately due to its a bug with how poetry resolves dependencies & scans indexes.
# 1. instead of returning 404 for packages it doesn't have, PyTorch's index returns 403.
# 2. Poetry doesn't know how to deal with +tags on the version.
# See https://github.com/python-poetry/poetry/issues/2543
install-torch = "pip install torch==1.11.0+cu115 torchvision==0.12.0+cu115 -f https://download.pytorch.org/whl/torch_stable.html"
build-windows-minimal = """\
pyinstaller nicepipe\\__main__.py \
--name nicepipe \
--icon nicepipe.ico \
--noconfirm \
--onefile \
--collect-data mediapipe \
--collect-data nicepipe \
--exclude-module uvloop \
--exclude-module tensorflow \
--exclude-module nicepipe.utils.cuda\
"""
build-windows = """\
pyinstaller app.py \
--name nicepipe \
--icon nicepipe.ico \
--noconfirm \
--onefile \
--collect-data mediapipe \
--collect-data nicepipe \
--exclude-module uvloop \
--paths cudnn\\bin \
--paths cudnn\\dll_x64 \
--paths .venv\\lib\\site-packages\\nvidia\\cublas\\lib\\x64 \
--paths .venv\\lib\\site-packages\\nvidia\\cuda_runtime\\bin \
--paths .venv\\lib\\site-packages\\nvidia\\cufft\\bin \
--paths .venv\\lib\\site-packages\\nvidia\\curand\\bin \
--paths .venv\\lib\\site-packages\\nvidia\\cusolver\\bin \
--paths .venv\\lib\\site-packages\\nvidia\\cusparse\\bin \
--upx-exclude cudart64_110.dll \
--upx-exclude cublas64_11.dll \
--upx-exclude cublaslt64_11.dll \
--upx-exclude cusolver64_11.dll \
--upx-exclude curand64_10.dll \
--upx-exclude cusparse64_11.dll \
--upx-exclude cufft64_10.dll\
"""
build-linux = """\
pyinstaller app.py \
--name nicepipe \
--noconfirm \
--onefile \
--collect-data mediapipe \
--collect-data nicepipe \
--paths .venv/lib/site-packages/nvidia/cublas/lib \
--paths .venv/lib/site-packages/nvidia/cuda_runtime/lib \
--paths .venv/lib/site-packages/nvidia/cudnn/lib \
--paths .venv/lib/site-packages/nvidia/cufft/lib \
--paths .venv/lib/site-packages/nvidia/curand/lib \
--paths .venv/lib/site-packages/nvidia/cusolver/lib \
--paths .venv/lib/site-packages/nvidia/cusparse/lib\
"""
dev = "python -m nicepipe"

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
numpy = "^1.22.3"
opencv-contrib-python = "^4.5.5"
protobuf = "^3.20.0"
mediapipe = "^0.8.9.1"
uvloop = {version = "^0.16.0", platform = "linux"}
tensorflow = "^2.8.0"
rich = "^12.2.0"
blacksheep = "^1.2.6"
uvicorn = {extras = ["standard"], version = "^0.17.6"}
omegaconf = "^2.2.0"
dearpygui = "^1.6.1"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.13.1"
line-profiler = "^3.5.1"
pyinstaller = "^4.10"
black = "^22.3.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# [[tool.poetry.source]]
# name = "nvidia"
# url = "https://pypi.ngc.nvidia.com/"
# secondary = true
#
# [tool.poetry.group.cuda.dependencies]
# nvidia-cuda-runtime-cu11 = {version = "^2021.12.20", source = "nvidia"}
# nvidia-cublas-cu11 = {version = "^2022.3.24", source = "nvidia"}
# nvidia-cufft-cu11 = {version = "^2022.3.24", source = "nvidia"}
# nvidia-curand-cu11 = {version = "^2022.3.24", source = "nvidia"}
# nvidia-cusolver-cu11 = {version = "^2022.3.24", source = "nvidia"}
# nvidia-cusparse-cu11 = {version = "^2022.3.24", source = "nvidia"}
# nvidia-cudnn = {version = "^8.2.0", source = "nvidia", platform = "linux"}
